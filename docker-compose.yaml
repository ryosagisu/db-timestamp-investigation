version: '3.9'

services:
  mysql_jakarta:
    container_name: myid
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      TZ: Asia/Jakarta
    volumes:
      - ./db_init/mysql.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      retries: 5

  mysql_singapore:
    container_name: mysg
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      TZ: Asia/Singapore
    volumes:
      - ./db_init/mysql.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      retries: 5

  postgres_jakarta:
    container_name: pgid
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      TZ: Asia/Jakarta
    volumes:
      - ./db_init/postgresql.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  postgres_singapore:
    container_name: pgsg
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      TZ: Asia/Singapore
    volumes:
      - ./db_init/postgresql.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  spark-master:
    container_name: spark
    image: bitnami/spark
    depends_on:
      mysql_jakarta:
        condition: service_healthy
      mysql_singapore:
        condition: service_healthy
      postgres_jakarta:
        condition: service_healthy
      postgres_singapore:
        condition: service_healthy
    environment:
      TZ: UTC
    volumes:
      - ./spark_additional_jars:/spark_additional_jars
      - ./spark_scripts:/spark_scripts
